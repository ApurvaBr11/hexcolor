{
  "version": 3,
  "sources": ["../src/extension.ts", "../src/palettes.ts"],
  "sourcesContent": ["import * as vscode from 'vscode';\nimport { trendyPalettes } from './palettes';\n\nexport function activate(context: vscode.ExtensionContext) {\n    context.subscriptions.push(\n        vscode.commands.registerCommand('extension.showColorPalettes', () => {\n            const panel = vscode.window.createWebviewPanel(\n                'colorPalettes',\n                'Trendy Color Palettes',\n                vscode.ViewColumn.One,\n                {\n                    enableScripts: true\n                }\n            );\n\n            panel.webview.html = getWebviewContent(trendyPalettes);\n\n            panel.webview.onDidReceiveMessage(\n                message => {\n                    switch (message.command) {\n                        case 'copy':\n                            vscode.env.clipboard.writeText(message.color);\n                            vscode.window.showInformationMessage(`Color ${message.color} copied to clipboard!`);\n                            return;\n                    }\n                },\n                undefined,\n                context.subscriptions\n            );\n        })\n    );\n}\n\nfunction getWebviewContent(palettes: any): string {\n    const paletteHtml = palettes.map((palette: any) => `\n        <div class=\"palette\">\n            <h3>${palette.name}</h3>\n            <div class=\"colors\">\n                ${palette.colors.map((color: string) => `\n                    <div class=\"color\" style=\"background-color: ${color};\" data-color=\"${color}\"></div>\n                `).join('')}\n            </div>\n        </div>\n    `).join('');\n\n    return `\n        <!DOCTYPE html>\n        <html lang=\"en\">\n        <head>\n            <meta charset=\"UTF-8\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n            <title>Trendy Color Palettes</title>\n            <style>\n                .palette { margin-bottom: 20px; }\n                .colors { display: flex; }\n                .color {\n                    width: 50px;\n                    height: 50px;\n                    margin-right: 10px;\n                    cursor: pointer;\n                    border: 1px solid #ccc;\n                }\n            </style>\n        </head>\n        <body>\n            ${paletteHtml}\n            <script>\n                const vscode = acquireVsCodeApi();\n                document.querySelectorAll('.color').forEach(colorDiv => {\n                    colorDiv.addEventListener('click', () => {\n                        const color = colorDiv.getAttribute('data-color');\n                        vscode.postMessage({ command: 'copy', color });\n                    });\n                });\n            </script>\n        </body>\n        </html>\n    `;\n}\n\nexport function deactivate() {}\n", "\r\nexport const trendyPalettes = [\r\n    {\r\n        name: 'Summer Vibes',\r\n        colors: ['#FF5733', '#FFBD33', '#DBFF33', '#75FF33', '#33FF57']\r\n    },\r\n    {\r\n        name: 'Ocean Blues',\r\n        colors: ['#001F3F', '#0074D9', '#7FDBFF', '#39CCCC', '#3D9970']\r\n    }\r\n    // Add more palettes as needed\r\n];\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA,aAAwB;;;ACCjB,IAAM,iBAAiB;AAAA,EAC1B;AAAA,IACI,MAAM;AAAA,IACN,QAAQ,CAAC,WAAW,WAAW,WAAW,WAAW;AAAA;AAAA,EAEzD;AAAA,IACI,MAAM;AAAA,IACN,QAAQ,CAAC,WAAW,WAAW,WAAW,WAAW;AAAA;AAAA;;;ADLtD,kBAAkB,SAAkC;AACvD,UAAQ,cAAc,KAClB,AAAO,gBAAS,gBAAgB,+BAA+B,MAAM;AACjE,UAAM,QAAQ,AAAO,cAAO,mBACxB,iBACA,yBACA,AAAO,kBAAW,KAClB;AAAA,MACI,eAAe;AAAA;AAIvB,UAAM,QAAQ,OAAO,kBAAkB;AAEvC,UAAM,QAAQ,oBACV,aAAW;AACP,cAAQ,QAAQ;AAAA,aACP;AACD,UAAO,WAAI,UAAU,UAAU,QAAQ;AACvC,UAAO,cAAO,uBAAuB,SAAS,QAAQ;AACtD;AAAA;AAAA,OAGZ,QACA,QAAQ;AAAA;AAAA;AAMxB,2BAA2B,UAAuB;AAC9C,QAAM,cAAc,SAAS,IAAI,CAAC,YAAiB;AAAA;AAAA,kBAErC,QAAQ;AAAA;AAAA,kBAER,QAAQ,OAAO,IAAI,CAAC,UAAkB;AAAA,kEACU,uBAAuB;AAAA,mBACtE,KAAK;AAAA;AAAA;AAAA,OAGjB,KAAK;AAER,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAoBG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeP,sBAAsB;AAAA;",
  "names": []
}
